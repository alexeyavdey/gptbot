#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ —Ä–µ–∞–ª—å–Ω–æ–π –æ—à–∏–±–∫–∏ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
"""

import sys
import os
sys.path.insert(0, os.getcwd())

async def debug_user_602126():
    """–û—Ç–ª–∞–¥–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 602126"""
    print("üîç –û—Ç–ª–∞–¥–∫–∞ –æ—à–∏–±–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 602126")
    
    try:
        from enhanced_ai_agents import initialize_enhanced_agents
        from constants import GPT4_MODEL
        import env
        
        print("\n1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π API –∫–ª—é—á –µ—Å–ª–∏ –µ—Å—Ç—å
        api_key = getattr(env, 'API_KEY', 'test_key')
        orchestrator = initialize_enhanced_agents(api_key, GPT4_MODEL)
        print("   ‚úÖ –û—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        user_id = 602126
        message = "—É –º–µ–Ω—è –µ—Å—Ç—å –∑–∞–¥–∞—á–∏?"
        
        print(f"\n2. –¢–µ—Å—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –Ω–∞–ø—Ä—è–º—É—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}:")
        analytics = orchestrator.db.get_task_analytics(user_id)
        print(f"   Raw analytics: {analytics}")
        
        print(f"\n3. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}:")
        user_state = await orchestrator._get_user_state(user_id)
        print(f"   User state: {user_state}")
        
        print(f"\n4. –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Ä–æ—É—Ç–∏–Ω–≥–∞:")
        result = await orchestrator.route_request(user_id, message)
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–æ—É—Ç–∏–Ω–≥–∞: {result}")
        
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã –±–µ–∑ –æ—à–∏–±–æ–∫!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    import asyncio
    asyncio.run(debug_user_602126())